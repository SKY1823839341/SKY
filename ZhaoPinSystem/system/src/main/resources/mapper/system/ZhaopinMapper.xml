<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.ZhaopinMapper">
    
    <resultMap type="Zhaopin" id="ZhaopinResult">
        <result property="jobId"    column="job_id"    />
        <result property="jobName"    column="job_name"    />
        <result property="jobSalary"    column="job_salary"    />
        <result property="status"    column="status"    />
        <result property="jobCompany"    column="job_company"    />
        <result property="createTime"    column="create_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectZhaopinVo">
        select job_id, job_name, job_salary, status, job_company, create_time, remark from zhaopin
    </sql>

    <select id="selectZhaopinList" parameterType="Zhaopin" resultMap="ZhaopinResult">
        <include refid="selectZhaopinVo"/>
        <where>  
            <if test="jobName != null  and jobName != ''"> and job_name like concat('%', #{jobName}, '%')</if>
            <if test="jobSalary != null "> and job_salary = #{jobSalary}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="jobCompany != null  and jobCompany != ''"> and job_company = #{jobCompany}</if>
        </where>
    </select>
    
    <select id="selectZhaopinByJobId" parameterType="Long" resultMap="ZhaopinResult">
        <include refid="selectZhaopinVo"/>
        where job_id = #{jobId}
    </select>
        
    <insert id="insertZhaopin" parameterType="Zhaopin">
        insert into zhaopin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="jobId != null">job_id,</if>
            <if test="jobName != null and jobName != ''">job_name,</if>
            <if test="jobSalary != null">job_salary,</if>
            <if test="status != null">status,</if>
            <if test="jobCompany != null">job_company,</if>
            <if test="createTime != null">create_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="jobId != null">#{jobId},</if>
            <if test="jobName != null and jobName != ''">#{jobName},</if>
            <if test="jobSalary != null">#{jobSalary},</if>
            <if test="status != null">#{status},</if>
            <if test="jobCompany != null">#{jobCompany},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateZhaopin" parameterType="Zhaopin">
        update zhaopin
        <trim prefix="SET" suffixOverrides=",">
            <if test="jobName != null and jobName != ''">job_name = #{jobName},</if>
            <if test="jobSalary != null">job_salary = #{jobSalary},</if>
            <if test="status != null">status = #{status},</if>
            <if test="jobCompany != null">job_company = #{jobCompany},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where job_id = #{jobId}
    </update>

    <delete id="deleteZhaopinByJobId" parameterType="Long">
        delete from zhaopin where job_id = #{jobId}
    </delete>

    <delete id="deleteZhaopinByJobIds" parameterType="String">
        delete from zhaopin where job_id in 
        <foreach item="jobId" collection="array" open="(" separator="," close=")">
            #{jobId}
        </foreach>
    </delete>

</mapper>